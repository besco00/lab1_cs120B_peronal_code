
GccApplication2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000001ca  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000176  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000001ca  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001fc  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  0000023c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000082a  00000000  00000000  0000025c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000078e  00000000  00000000  00000a86  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000025e  00000000  00000000  00001214  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00001474  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003ef  00000000  00000000  00001498  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000050  00000000  00000000  00001887  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  000018d7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	02 d0       	rcall	.+4      	; 0x9e <main>
  9a:	6b c0       	rjmp	.+214    	; 0x172 <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <main>:
#include <avr/io.h>


int main(void)
{
    DDRA = 0x00; 
  9e:	11 b8       	out	0x01, r1	; 1
    {
		if(PORTA==0x00){
			cntavail=4;
			PORTC= cntavail;
		}
		else if ((PORTA==0x01 )|(PORTA==0x02)|(PORTA==0x04)|(PORTA==0x08)){
  a0:	81 e0       	ldi	r24, 0x01	; 1
			cntavail=3;
			PORTC=cntavail;
  a2:	e3 e0       	ldi	r30, 0x03	; 3
		}
		else if((PORTA== 0x03)| (PORTA==0x09)|(PORTA==0x05)|(PORTA==0x06)|(PORTA==0x0A)|(PORTA==0x0C)){
			cntavail=2;
			PORTC=2;
  a4:	f2 e0       	ldi	r31, 0x02	; 2
		}
		else if((PORTA== 0x0E)| (PORTA==0x0B)|(PORTA==0x07)|(PORTA==0x0D)){
  a6:	90 e0       	ldi	r25, 0x00	; 0
	
    while (1) 
    {
		if(PORTA==0x00){
			cntavail=4;
			PORTC= cntavail;
  a8:	74 e0       	ldi	r23, 0x04	; 4
    DDRA = 0x00; 
	unsigned char cntavail= 0;
	
    while (1) 
    {
		if(PORTA==0x00){
  aa:	22 b1       	in	r18, 0x02	; 2
  ac:	21 11       	cpse	r18, r1
  ae:	02 c0       	rjmp	.+4      	; 0xb4 <main+0x16>
			cntavail=4;
			PORTC= cntavail;
  b0:	78 b9       	out	0x08, r23	; 8
  b2:	fb cf       	rjmp	.-10     	; 0xaa <main+0xc>
		}
		else if ((PORTA==0x01 )|(PORTA==0x02)|(PORTA==0x04)|(PORTA==0x08)){
  b4:	22 b1       	in	r18, 0x02	; 2
  b6:	52 b1       	in	r21, 0x02	; 2
  b8:	42 b1       	in	r20, 0x02	; 2
  ba:	62 b1       	in	r22, 0x02	; 2
  bc:	38 2f       	mov	r19, r24
  be:	21 30       	cpi	r18, 0x01	; 1
  c0:	09 f0       	breq	.+2      	; 0xc4 <main+0x26>
  c2:	39 2f       	mov	r19, r25
  c4:	28 2f       	mov	r18, r24
  c6:	52 30       	cpi	r21, 0x02	; 2
  c8:	09 f0       	breq	.+2      	; 0xcc <main+0x2e>
  ca:	29 2f       	mov	r18, r25
  cc:	32 2b       	or	r19, r18
  ce:	28 2f       	mov	r18, r24
  d0:	44 30       	cpi	r20, 0x04	; 4
  d2:	09 f0       	breq	.+2      	; 0xd6 <main+0x38>
  d4:	29 2f       	mov	r18, r25
  d6:	23 2b       	or	r18, r19
  d8:	31 f4       	brne	.+12     	; 0xe6 <main+0x48>
  da:	28 2f       	mov	r18, r24
  dc:	68 30       	cpi	r22, 0x08	; 8
  de:	09 f0       	breq	.+2      	; 0xe2 <main+0x44>
  e0:	29 2f       	mov	r18, r25
  e2:	22 23       	and	r18, r18
  e4:	11 f0       	breq	.+4      	; 0xea <main+0x4c>
			cntavail=3;
			PORTC=cntavail;
  e6:	e8 b9       	out	0x08, r30	; 8
  e8:	e0 cf       	rjmp	.-64     	; 0xaa <main+0xc>
		}
		else if((PORTA== 0x03)| (PORTA==0x09)|(PORTA==0x05)|(PORTA==0x06)|(PORTA==0x0A)|(PORTA==0x0C)){
  ea:	22 b1       	in	r18, 0x02	; 2
  ec:	a2 b1       	in	r26, 0x02	; 2
  ee:	32 b1       	in	r19, 0x02	; 2
  f0:	62 b1       	in	r22, 0x02	; 2
  f2:	52 b1       	in	r21, 0x02	; 2
  f4:	b2 b1       	in	r27, 0x02	; 2
  f6:	48 2f       	mov	r20, r24
  f8:	23 30       	cpi	r18, 0x03	; 3
  fa:	09 f0       	breq	.+2      	; 0xfe <main+0x60>
  fc:	49 2f       	mov	r20, r25
  fe:	28 2f       	mov	r18, r24
 100:	a9 30       	cpi	r26, 0x09	; 9
 102:	09 f0       	breq	.+2      	; 0x106 <main+0x68>
 104:	29 2f       	mov	r18, r25
 106:	24 2b       	or	r18, r20
 108:	48 2f       	mov	r20, r24
 10a:	35 30       	cpi	r19, 0x05	; 5
 10c:	09 f0       	breq	.+2      	; 0x110 <main+0x72>
 10e:	49 2f       	mov	r20, r25
 110:	24 2b       	or	r18, r20
 112:	38 2f       	mov	r19, r24
 114:	66 30       	cpi	r22, 0x06	; 6
 116:	09 f0       	breq	.+2      	; 0x11a <main+0x7c>
 118:	39 2f       	mov	r19, r25
 11a:	32 2b       	or	r19, r18
 11c:	28 2f       	mov	r18, r24
 11e:	5a 30       	cpi	r21, 0x0A	; 10
 120:	09 f0       	breq	.+2      	; 0x124 <main+0x86>
 122:	29 2f       	mov	r18, r25
 124:	23 2b       	or	r18, r19
 126:	31 f4       	brne	.+12     	; 0x134 <main+0x96>
 128:	28 2f       	mov	r18, r24
 12a:	bc 30       	cpi	r27, 0x0C	; 12
 12c:	09 f0       	breq	.+2      	; 0x130 <main+0x92>
 12e:	29 2f       	mov	r18, r25
 130:	22 23       	and	r18, r18
 132:	11 f0       	breq	.+4      	; 0x138 <main+0x9a>
			cntavail=2;
			PORTC=2;
 134:	f8 b9       	out	0x08, r31	; 8
 136:	b9 cf       	rjmp	.-142    	; 0xaa <main+0xc>
		}
		else if((PORTA== 0x0E)| (PORTA==0x0B)|(PORTA==0x07)|(PORTA==0x0D)){
 138:	22 b1       	in	r18, 0x02	; 2
 13a:	52 b1       	in	r21, 0x02	; 2
 13c:	42 b1       	in	r20, 0x02	; 2
 13e:	62 b1       	in	r22, 0x02	; 2
 140:	38 2f       	mov	r19, r24
 142:	2e 30       	cpi	r18, 0x0E	; 14
 144:	09 f0       	breq	.+2      	; 0x148 <main+0xaa>
 146:	39 2f       	mov	r19, r25
 148:	28 2f       	mov	r18, r24
 14a:	5b 30       	cpi	r21, 0x0B	; 11
 14c:	09 f0       	breq	.+2      	; 0x150 <main+0xb2>
 14e:	29 2f       	mov	r18, r25
 150:	32 2b       	or	r19, r18
 152:	28 2f       	mov	r18, r24
 154:	47 30       	cpi	r20, 0x07	; 7
 156:	09 f0       	breq	.+2      	; 0x15a <main+0xbc>
 158:	29 2f       	mov	r18, r25
 15a:	23 2b       	or	r18, r19
 15c:	31 f4       	brne	.+12     	; 0x16a <main+0xcc>
 15e:	28 2f       	mov	r18, r24
 160:	6d 30       	cpi	r22, 0x0D	; 13
 162:	09 f0       	breq	.+2      	; 0x166 <main+0xc8>
 164:	29 2f       	mov	r18, r25
 166:	22 23       	and	r18, r18
 168:	11 f0       	breq	.+4      	; 0x16e <main+0xd0>
			cntavail=1;
			PORTC=cntavail;
 16a:	88 b9       	out	0x08, r24	; 8
 16c:	9e cf       	rjmp	.-196    	; 0xaa <main+0xc>
		}
		else {
		cntavail=0;
		PORTC=cntavail;
 16e:	18 b8       	out	0x08, r1	; 8
 170:	9c cf       	rjmp	.-200    	; 0xaa <main+0xc>

00000172 <_exit>:
 172:	f8 94       	cli

00000174 <__stop_program>:
 174:	ff cf       	rjmp	.-2      	; 0x174 <__stop_program>
